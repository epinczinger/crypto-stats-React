{"version":3,"sources":["components/Header.js","actions/index.js","components/Coin.js","components/CoinList.js","components/App.js","reducers/coins.js","reducers/toggle.js","reducers/index.js","index.js"],"names":["Header","theme","useSelector","state","toggle","dispatch","useDispatch","className","name","onClick","type","Coin","CoinList","App","coin","askData","axios","method","url","headers","Accept","Accept_Encoding","mode","then","response","console","log","payload","catch","error","coinReducer","action","lightTheme","darkTheme","toggleReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"4NAwBeA,EApBA,WACb,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAErCC,EAAWC,cACjB,OACE,yBACEC,UAAS,UAAKN,EAAL,sDADX,UAGE,qBAAKM,UAAU,GAAf,yBACA,2CACA,wBACEC,KAAK,SACLC,QAAS,kBAAMJ,GCWU,SAACA,GAChCA,EAAS,CACPK,KAAM,qBDZFA,KAAK,SAHP,8BEOSC,EAlBF,WACX,IAAMV,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAE3C,OACE,sBAAKG,UAAS,UAAKN,EAAL,yCAAd,UACE,yCACA,oCACA,yCACA,mRCCSW,EATE,kBACf,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QC2BWC,EA7BH,WACV,IAAMC,EAAOZ,aAAY,SAACC,GAAD,OAAWA,EAAMW,QACpCb,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UACrCC,EAAWC,cACXS,EAAU,WACdV,GHP6B,SAACA,GAChCW,IAAM,CACJC,OAAQ,MACRC,IALY,2BAMZC,QAAS,CACPC,OAAQ,mBACRC,gBAAiB,OACjBC,KAAM,UAGPC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZnB,EAAS,CACPK,KAAM,YACNiB,QAASH,OAGZI,OAAM,SAACC,GAAD,OAAWxB,EAAS,CACzBK,KAAM,kBACNiB,QAASE,WGTb,OACE,sBAAKtB,UAAWN,EAAhB,UACE,cAAC,EAAD,IACA,6CACA,4BACGa,IAGH,cAAC,EAAD,IAEA,wBACEN,KAAK,SACLC,QAAS,WAAQM,KACjBL,KAAK,SAHP,wB,eCbSoB,EAXK,WAAyB,IAAxB3B,EAAuB,uDAAf,GAAI4B,EAAW,uCAC1C,OAAQA,EAAOrB,MACb,IAAK,YACH,OAAOqB,EAAOJ,QAChB,IAAK,kBACH,MAAMI,EAAOJ,QACf,QACE,OAAOxB,ICPP6B,EAAa,8BACbC,EAAY,8BAoBHC,EAlBO,WAGhB,IAFJ/B,EAEG,uDAFK6B,EACRD,EACG,uCACH,OAAQA,EAAOrB,MACb,IAAK,eACH,GAAIP,IAAU6B,EACZ,OAAOC,EACP,GAAI9B,IAAU8B,EACd,OAAOD,EAET,MACF,QACE,OAAO7B,EAEX,OAAOA,GCbHgC,EAAcC,YAAgB,CAClCtB,KAAMgB,EACN1B,OAAQ8B,IAKKG,EAFDC,YAAYH,EAAaI,YAAgBC,M,MCFvDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.18880482.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleTheme } from '../actions';\n\nconst Header = () => {\n  const theme = useSelector((state) => state.toggle);\n\n  const dispatch = useDispatch();\n  return (\n    <header\n      className={`${theme} w-full font-sans flex justify-around sticky top-0`}\n    >\n      <div className=\"\">CryptoStats</div>\n      <div>MenuIcon</div>\n      <button\n        name=\"button\"\n        onClick={() => dispatch(toggleTheme(theme))}\n        type=\"button\"\n      >\n        Change Theme\n      </button>\n    </header>\n  );\n};\nexport default Header;\n","import axios from 'axios';\n\nconst API_URL = 'api.coincap.io/v2/assets';\n\nexport const getCoinData = () => (dispatch) => {\n  axios({\n    method: 'get',\n    url: API_URL,\n    headers: {\n      Accept: 'application/json',\n      Accept_Encoding: 'gzip',\n      mode: 'cors',\n    },\n  })\n    .then((response) => {\n      console.log(response);\n      dispatch({\n        type: 'GET_COINS',\n        payload: response,\n      });\n    })\n    .catch((error) => dispatch({\n      type: 'GET_COINS_ERROR',\n      payload: error,\n    }));\n};\n\nexport const toggleTheme = () => (dispatch) => {\n  dispatch({\n    type: 'TOGGLE_THEME',\n  });\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Coin = () => {\n  const theme = useSelector((state) => state.toggle);\n\n  return (\n    <div className={`${theme} flex text-center justify-center px-2`}>\n      <h2>Bitcoin</h2>\n      <p>BTC</p>\n      <p>58594.35</p>\n      <p>\n        Bitcoin is the first digital currency that allows users to send and\n        receive money, without the interference of a central bank or government.\n        Instead, a network of thousands of peers is controlling the transactions;\n        a decentralized system.\n      </p>\n    </div>\n  );\n};\n\nexport default Coin;\n","import React from 'react';\nimport Coin from './Coin';\n\nconst CoinList = () => (\n  <>\n    <Coin />\n    <Coin />\n    <Coin />\n    <Coin />\n  </>\n);\n\nexport default CoinList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from './Header';\nimport CoinList from './CoinList';\nimport { getCoinData } from '../actions';\n\nconst App = () => {\n  const coin = useSelector((state) => state.coin);\n  const theme = useSelector((state) => state.toggle);\n  const dispatch = useDispatch();\n  const askData = () => {\n    dispatch(getCoinData());\n  };\n\n  return (\n    <div className={theme}>\n      <Header />\n      <h1>CryptoStats</h1>\n      <p>\n        {coin}\n        {/* {askData} */}\n      </p>\n      <CoinList />\n\n      <button\n        name=\"button\"\n        onClick={() => { askData(); }}\n        type=\"button\"\n      >\n        Button\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","const coinReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_COINS':\n      return action.payload;\n    case 'GET_COINS_ERROR':\n      throw action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default coinReducer;\n","const lightTheme = 'bg-yellow-400 text-gray-800';\nconst darkTheme = 'bg-gray-800 text-yellow-400';\n\nconst toggleReducer = (\n  state = lightTheme,\n  action,\n) => {\n  switch (action.type) {\n    case 'TOGGLE_THEME':\n      if (state === lightTheme) {\n        return darkTheme;\n      } if (state === darkTheme) {\n        return lightTheme;\n      }\n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n\nexport default toggleReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport coinReducer from './coins';\nimport toggleReducer from './toggle';\n\nconst rootReducer = combineReducers({\n  coin: coinReducer,\n  toggle: toggleReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App';\nimport store from './reducers';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}